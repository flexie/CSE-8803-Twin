{
  "hash": "14d2045505c2ecd3e114f3a3a0216e86",
  "result": {
    "markdown": "---\ntitle: \"Welcome to Intro Data Science\"\nsubtitle: \"Example presentation\"\ndate: \"August 29, 2022\"\nfooter: \"[ðŸ”— rstudio-conf-2022.github.io/teach-ds-course-website](https://rstudio-conf-2022.github.io/teach-ds-course-website)\"\nlogo: \"images/logo.png\"\nformat: \n  revealjs:\n    theme: solarized\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\n    center: true\nexecute:\n  freeze: auto\n  echo: true\n---\n\n\n# Welcome!\n\n\n::: {.cell}\n\n:::\n\n\n## Bullet point list\n\n**Unordered**\n\n-   Item A\n-   Item B\n-   Item C\n\n**Ordered**\n\n1.  Item 1\n2.  Item 2\n3.  Item 3\n\n## Incremental list\n\n::: incremental\n-   Item 1\n-   Item 2\n-   Item 3\n:::\n\n## Equations\n\nWrite mathematical symbols and equations using Latex.\n\nUse the formulas below to calculate $\\hat{\\beta}_1$, the estimated slope, and $\\hat{\\beta}_0$, the estimated intercept.\n\n\n$$\n\\begin{aligned}\n&\\hat{\\beta}_1 = r \\frac{s_y}{s_x} \\\\\n&\\hat{\\beta}_0 = \\bar{y} - \\hat{\\beta}_1 \\bar{x}\n\\end{aligned}\n$$\n\n\n## Code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Use code chunk option fig-align: center to center the plot. \nggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g, \n                            color = species)) + \n         geom_point() + \n  labs(x = \"Flipper Length (in mm)\",y = \"Body Mass (in g)\",\n       title = \"Flipper length vs. body mass\",\n       subtitle = \"Penguins at Palmer Station, Antartica\") +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![](01-example_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## Images\n\n![Artwork by [\\@allison_horst](https://www.allisonhorst.com/)](images/penguins.png){fig-alt=\"Three penguins labeled Chinstrap, Gentoo, and Adelie.\" fig-align=\"center\"}\n\n## Columns\n\n::: columns\n::: {.column width=\"50%\"}\nCalculate the proportion of penguins from each species.\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  count(species) |>\n  mutate(prop  = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 Ã— 3\n  species       n  prop\n  <fct>     <int> <dbl>\n1 Adelie      152 0.442\n2 Chinstrap    68 0.198\n3 Gentoo      124 0.360\n```\n:::\n:::\n\n:::\n:::\n\n## Panels\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  filter(species == \"Adelie\", !is.na(sex)) |>\n  ggplot(aes(x = flipper_length_mm, y = body_mass_g, color = sex)) + \n  geom_point() +\n  labs(x = \"Flipper Length (in mm)\",y = \"Body Mass (in g)\",\n       title = \"Flipper length vs. body mass\",\n       subtitle = \"Adelie Penguins at Palmer Station, Antartica\") +\n  scale_color_viridis_d() + \n  facet_wrap(~island)\n```\n\n::: {.cell-output-display}\n![](01-example_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  filter(species == \"Adelie\", !is.na(sex)) |>\n  ggplot(aes(x = flipper_length_mm, y = body_mass_g, color = sex)) + \n  geom_point() +\n  labs(x = \"Flipper Length (in mm)\",y = \"Body Mass (in g)\",\n       title = \"Flipper length vs. body mass\",\n       subtitle = \"Adelie Penguins at Palmer Station, Antartica\") +\n  scale_color_viridis_d() + \n  facet_wrap(~island)\n```\n:::\n\n:::\n\n## Themes\n\nCustomize the appearance of the slides using\n\n-   Built-in [Reveal theme](https://quarto.org/docs/presentations/revealjs/themes.html#using-themes)\n\n-   Modify built-in theme using [Sass](https://quarto.org/docs/presentations/revealjs/themes.html#creating-themes)\n\n    -   Variant of CSS that supports variables and other features\n\n-   Create custom thing using Sass\n\nSpecify the theme and/or Sass file (.scss) in the YAML\n",
    "supporting": [
      "01-example_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}